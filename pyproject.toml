[tool.poetry]
name = "mikro"
version = "0.3.81"
description = "images for arkitekt"
authors = ["jhnnsrs <jhnnsrs@gmail.com>"]
license = "CC BY-NC 3.0"
packages = [{ include = "mikro" }]

[tool.poetry.dependencies]
python = "^3.8, <=3.12"
zarr = "^2.14.2"
xarray = ">=2022.12.0"
s3fs = "^2023.1.0"
pandas = "^1.5.3"
pyarrow = { version = ">=11.0", python = ">=3.8", optional = true }
dask = "^2023.3.0"
rath = ">=0.3.6"

[tool.poetry.extras]
turms = ["turms"]
table = ["pyarrow"]
complete = ["turms", "pyarrow"]

[tool.mypy]
exclude = ["venv/"]
ignore_missing_imports = true


[tool.ruff]
extend-select = ["ANN", "D1"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

[tool.poetry.group.dev.dependencies]
testcontainers = "3.7.0"
autoflake = "^1.7.7"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.2"
turms = { version = ">=0.3.1", python = "^3.9" }
aiohttp = "^3.8.3"
websockets = "^10.4"
black = "^23.1.0"
pytest-cov = "^4.0.0"
pytest-aiohttp = "^1.0.4"
ruff = "^0.0.254"
mypy = "^1.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
qt_api = "pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
]

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["mikro"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"
