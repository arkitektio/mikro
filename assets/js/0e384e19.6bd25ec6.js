"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:1,sidebar_label:"Introduction"},l="Quick Start",p={unversionedId:"intro",id:"intro",title:"Quick Start",description:"Let's discover mikro in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/mikro/docs/intro",editUrl:"https://github.com/jhnnsrs/mikro/edit/master/website/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Introduction"},sidebar:"tutorialSidebar",previous:{title:"GraphQL",permalink:"/mikro/docs/graphql"},next:{title:"Arkitekt",permalink:"/mikro/docs/arkitekt"}},c={},m=[{value:"Inspiration",id:"inspiration",level:3},{value:"Installation",id:"installation",level:3},{value:"Design",id:"design",level:3},{value:"Prerequisits",id:"prerequisits",level:3},{value:"Example Use case",id:"example-use-case",level:2},{value:"Other usage options",id:"other-usage-options",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick Start"),(0,i.kt)("p",null,"Let's discover ",(0,i.kt)("strong",{parentName:"p"},"mikro in less than 5 minutes"),"."),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This is a very developmental build, that is currently only used to test in the IINS, Bordeaux. If you are intersteted please contact\nthe authors directly!\nplease"))),(0,i.kt)("h3",{id:"inspiration"},"Inspiration"),(0,i.kt)("p",null,"Mikro is the client app for the mikro-server, a graphql compliant server for hosting your microscopy data. Mikro tries to\nfacilitate a transition to use modern technologies for the storage and retrieval of microscopy data. It emphasizes the importance\nof relations within your data and tries to make them accessible through a GraphQL Interface."),(0,i.kt)("h3",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install mikro\n")),(0,i.kt)("h3",{id:"design"},"Design"),(0,i.kt)("p",null,"Mikro is just a client and therefore only concerns itself with the querying (retrieval) and mutation (altering) of data on\nthe central server. Therefore its only composes two major components:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rath: A graphql client to query complex relationships in your data through simple queries."),(0,i.kt)("li",{parentName:"ul"},"Datalayer: A way of accessing and retrieving binary data (image arrays, big tables,...) through known python apis like xarray and numpy")),(0,i.kt)("p",null,"Under the hood Mikro is build on the growing ecosystem of graphql and pydantic as well as the amazing toolstack\nof zarr, dask and xarray for scientific computation."),(0,i.kt)("h3",{id:"prerequisits"},"Prerequisits"),(0,i.kt)("p",null,"You need a fully configured mikro-server running in your lab, that mikro can connect to."),(0,i.kt)("h2",{id:"example-use-case"},"Example Use case"),(0,i.kt)("p",null,"The API of Mikro is best explained on this example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from mikro import MikroApp, get_representation\nfrom fakts import Fakts\n\n\napp = MikroApp()\n\nwith app:\n    g = get_representation(107)\n\n    maximum_intensity_l = g.data.max()\n    maximum_intensity = maximum_intensity.compute()\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"First we construct an App"),":\nApp is the entrypoint of every client accessing the mikro service,\nin a more complex example here you would define the configuration of\nthe connection. If you don't specify anything here it will use ",(0,i.kt)("inlineCode",{parentName:"p"},"fakts")," to\nautoconfigure (searching for the fakts.yaml file in the directory). Check\nfakts documentation for retrieving this.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Entering the Context"),":\nThis is the most important concept to learn, every interaction you have with\nmikro needs to happen within a context. This is needed because mikro uses\nasyncrhonous programming to retrieve, and save data efficiently. The context\nensures that every connection gets cleaned up effienctly and safely.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Retrieving Model"),":\nOn calling ",(0,i.kt)("inlineCode",{parentName:"p"},"get_representation")," we are calling the graphql server and retrieve\nthe metadata of an image In this case the image with id ",(0,i.kt)("inlineCode",{parentName:"p"},"107"),". This function just\nexecutes a default graphqlquery and constructs a typed python model out of it.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Retrieving Data"),":\nHere we are actually doing operations on the image data. Every Representation\n(Image) has a ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," attribute. This data attribute resolves to a lazily loaded\nxarray that connects to a zarr store on the s3 datalayer. What that means for you\nis that you can use this as a normal xarray with dask array.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Computing Data"),"\nOnly on Computing Data is the data actually downloaded from the datalayer. If you\nonly act on partial data, only partial data is downloaded. This is the magic of\nzarr and xarray."))),(0,i.kt)("h2",{id:"other-usage-options"},"Other usage options"),(0,i.kt)("p",null,"If you dont want to use a context manager you can also choose to\nuse the connect/disconnect methods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from mikro import MikroApp, get_representation\nfrom fakts import Fakts\n\n\napp = MikroApp()\napp.connect()\n\ng = get_representation(107)\n\nmaximum_intensity = g.data.max().compute()\n\n#later\napp.disconnect()\n\n\n")),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you choose this approach, make sure that you call disconnect in your code at some\nstage. Especially when using asynchronous links/transports (supporting subscriptions) in a sync\nenvironment,as only on disconnect we will close the threaded loop that these transports required\nto operate. Otherwise this connection will stay open."))),(0,i.kt)("h1",{id:"async-usage"},"Async Usage:"),(0,i.kt)("p",null,"If you love asyncio, the way we do, you can also take full control over what happens in your app\nwithin an asynchrouns loop. Actually this is the API we would recommend."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from mikro import MikroApp, aget_representation\nfrom fakts import Fakts\n\n\napp = MikroApp()\n\nasync with app:\n    g = await aget_representation(107)\n\n    maximum_intensity = g.data.max() # DO NOT DO THIS IN YOUR ASYNC LOOP\n\n")),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In this scenario we are using the asyncio event loop and do not spawn a seperate thread, so calling\ng.data.max() actually calculates the array (e.g downloads everything blockingly in this loop)"))),(0,i.kt)("p",null,"If you want to know more about why we use apps, composition and how we handle threads, check out koil\n(mikros async-sync-helper library)"))}d.isMDXComponent=!0}}]);