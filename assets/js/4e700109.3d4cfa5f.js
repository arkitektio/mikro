"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[462],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3708:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),l=["components"],c={sidebar_label:"datalayer",title:"datalayer"},i=void 0,s={unversionedId:"reference/datalayer",id:"reference/datalayer",title:"datalayer",description:"This modules provides the datalayer.",source:"@site/docs/reference/datalayer.md",sourceDirName:"reference",slug:"/reference/datalayer",permalink:"/mikro/docs/reference/datalayer",editUrl:"https://github.com/jhnnsrs/mikro/edit/master/website/docs/reference/datalayer.md",tags:[],version:"current",frontMatter:{sidebar_label:"datalayer",title:"datalayer"},sidebar:"tutorialSidebar",previous:{title:"base",permalink:"/mikro/docs/reference/composition/base"},next:{title:"errors",permalink:"/mikro/docs/reference/errors"}},u={},p=[{value:"DataLayer Objects",id:"datalayer-objects",level:2}],d={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This modules provides the datalayer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("p",null,"  A simple datalayer that connects to an s3 instance via access_key and secret_key.\nYou can define all of the logic within the context manager"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from mikro.datalayer import Datalayer\n\ndl = Datalayer(access_key=&quot;XXXX&quot;, secret_key=&quot;XXXX&quot;, endpoint_url=&quot;s3.amazonaws.com&quot;)\n\nwith dl:\nprint(df.fs.ls())\n\n")),(0,o.kt)("p",null,"  Async Usage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from mikro.datalayer import Datalayer\n\ndl = Datalayer(access_key=&quot;XXXX&quot;, secret_key=&quot;XXXX&quot;, endpoint_url=&quot;s3.amazonaws.com&quot;)\n\nasync with dl:\nprint(df.fs.ls())\n\n")),(0,o.kt)("h2",{id:"datalayer-objects"},"DataLayer Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@koilable(add_connectors=True)\nclass DataLayer()\n")),(0,o.kt)("p",null,"Implements a S3 DataLayer"),(0,o.kt)("p",null,"This will be used to upload and download files from S3.\nMake sure to set the access_key and secret_key and enter the context\nmanager to connect to S3 (if authentication is required for the S3 instance\nand to ensure that the context is exited when the context manager is exited\n(for future cleanup purposes on other datalayers)."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fs")," ",(0,o.kt)("em",{parentName:"li"},"s3fs.S3FileSystem")," - The filesystem object")))}f.isMDXComponent=!0}}]);