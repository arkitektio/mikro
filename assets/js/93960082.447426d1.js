"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[891],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),k=m(a),c=l,d=k["".concat(o,".").concat(c)]||k[c]||u[c]||r;return a?n.createElement(d,i(i({ref:t},s),{},{components:a})):n.createElement(d,i({ref:t},s))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var m=2;m<r;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3815:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return u}});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),i=["components"],p={sidebar_label:"schema",title:"api.schema"},o=void 0,m={unversionedId:"reference/api/schema",id:"reference/api/schema",title:"api.schema",description:"OmeroFileType Objects",source:"@site/docs/reference/api/schema.md",sourceDirName:"reference/api",slug:"/reference/api/schema",permalink:"/mikro/docs/reference/api/schema",editUrl:"https://github.com/jhnnsrs/mikro/edit/master/website/docs/reference/api/schema.md",tags:[],version:"current",frontMatter:{sidebar_label:"schema",title:"api.schema"},sidebar:"tutorialSidebar",previous:{title:"Turms",permalink:"/mikro/docs/turms"},next:{title:"app",permalink:"/mikro/docs/reference/app"}},s={},u=[{value:"OmeroFileType Objects",id:"omerofiletype-objects",level:2},{value:"TIFF",id:"tiff",level:4},{value:"JPEG",id:"jpeg",level:4},{value:"MSR",id:"msr",level:4},{value:"CZI",id:"czi",level:4},{value:"UNKNOWN",id:"unknown",level:4},{value:"RepresentationVariety Objects",id:"representationvariety-objects",level:2},{value:"MASK",id:"mask",level:4},{value:"VOXEL",id:"voxel",level:4},{value:"RGB",id:"rgb",level:4},{value:"UNKNOWN",id:"unknown-1",level:4},{value:"RepresentationVarietyInput Objects",id:"representationvarietyinput-objects",level:2},{value:"MASK",id:"mask-1",level:4},{value:"VOXEL",id:"voxel-1",level:4},{value:"RGB",id:"rgb-1",level:4},{value:"UNKNOWN",id:"unknown-2",level:4},{value:"ROIType Objects",id:"roitype-objects",level:2},{value:"ELLIPSE",id:"ellipse",level:4},{value:"POLYGON",id:"polygon",level:4},{value:"LINE",id:"line",level:4},{value:"RECTANGLE",id:"rectangle",level:4},{value:"PATH",id:"path",level:4},{value:"UNKNOWN",id:"unknown-3",level:4},{value:"RoiTypeInput Objects",id:"roitypeinput-objects",level:2},{value:"ELLIPSIS",id:"ellipsis",level:4},{value:"POLYGON",id:"polygon-1",level:4},{value:"LINE",id:"line-1",level:4},{value:"RECTANGLE",id:"rectangle-1",level:4},{value:"PATH",id:"path-1",level:4},{value:"UNKNOWN",id:"unknown-4",level:4},{value:"InputVector Objects",id:"inputvector-objects",level:2},{value:"x",id:"x",level:4},{value:"y",id:"y",level:4},{value:"z",id:"z",level:4},{value:"RepresentationFragmentSample Objects",id:"representationfragmentsample-objects",level:2},{value:"RepresentationFragment Objects",id:"representationfragment-objects",level:2},{value:"sample",id:"sample",level:4},{value:"type",id:"type",level:4},{value:"variety",id:"variety",level:4},{value:"name",id:"name",level:4},{value:"ROIFragmentVectors Objects",id:"roifragmentvectors-objects",level:2},{value:"x",id:"x-1",level:4},{value:"y",id:"y-1",level:4},{value:"z",id:"z-1",level:4},{value:"ROIFragmentRepresentation Objects",id:"roifragmentrepresentation-objects",level:2},{value:"ROIFragmentCreator Objects",id:"roifragmentcreator-objects",level:2},{value:"color",id:"color",level:4},{value:"ROIFragment Objects",id:"roifragment-objects",level:2},{value:"type",id:"type-1",level:4},{value:"TableFragmentCreator Objects",id:"tablefragmentcreator-objects",level:2},{value:"TableFragmentSample Objects",id:"tablefragmentsample-objects",level:2},{value:"TableFragmentRepresentation Objects",id:"tablefragmentrepresentation-objects",level:2},{value:"TableFragmentExperiment Objects",id:"tablefragmentexperiment-objects",level:2},{value:"TableFragment Objects",id:"tablefragment-objects",level:2},{value:"tags",id:"tags",level:4},{value:"store",id:"store",level:4},{value:"SampleFragmentRepresentations Objects",id:"samplefragmentrepresentations-objects",level:2},{value:"SampleFragmentExperiments Objects",id:"samplefragmentexperiments-objects",level:2},{value:"ExperimentFragmentCreator Objects",id:"experimentfragmentcreator-objects",level:2},{value:"Get_omero_fileQuery Objects",id:"get_omero_filequery-objects",level:2},{value:"omerofile",id:"omerofile",level:4},{value:"Expand_omerofileQuery Objects",id:"expand_omerofilequery-objects",level:2},{value:"omerofile",id:"omerofile-1",level:4},{value:"Search_omerofileQuery Objects",id:"search_omerofilequery-objects",level:2},{value:"omerofiles",id:"omerofiles",level:4},{value:"Expand_representationQuery Objects",id:"expand_representationquery-objects",level:2},{value:"representation",id:"representation",level:4},{value:"Get_representationQuery Objects",id:"get_representationquery-objects",level:2},{value:"representation",id:"representation-1",level:4},{value:"Search_representationQueryRepresentations Objects",id:"search_representationqueryrepresentations-objects",level:2},{value:"label",id:"label",level:4},{value:"Search_representationQuery Objects",id:"search_representationquery-objects",level:2},{value:"representations",id:"representations",level:4},{value:"Get_random_repQuery Objects",id:"get_random_repquery-objects",level:2},{value:"random_representation",id:"random_representation",level:4},{value:"ThumbnailQuery Objects",id:"thumbnailquery-objects",level:2},{value:"thumbnail",id:"thumbnail",level:4},{value:"Expand_thumbnailQuery Objects",id:"expand_thumbnailquery-objects",level:2},{value:"thumbnail",id:"thumbnail-1",level:4},{value:"Get_roisQuery Objects",id:"get_roisquery-objects",level:2},{value:"rois",id:"rois",level:4},{value:"TableQuery Objects",id:"tablequery-objects",level:2},{value:"table",id:"table",level:4},{value:"Expand_tableQuery Objects",id:"expand_tablequery-objects",level:2},{value:"table",id:"table-1",level:4},{value:"Search_tablesQuery Objects",id:"search_tablesquery-objects",level:2},{value:"tables",id:"tables",level:4},{value:"Get_sampleQuery Objects",id:"get_samplequery-objects",level:2},{value:"sample",id:"sample-1",level:4},{value:"Search_sampleQuerySamples Objects",id:"search_samplequerysamples-objects",level:2},{value:"Search_sampleQuery Objects",id:"search_samplequery-objects",level:2},{value:"samples",id:"samples",level:4},{value:"Expand_sampleQuery Objects",id:"expand_samplequery-objects",level:2},{value:"sample",id:"sample-2",level:4},{value:"Get_experimentQuery Objects",id:"get_experimentquery-objects",level:2},{value:"experiment",id:"experiment",level:4},{value:"Expand_experimentQuery Objects",id:"expand_experimentquery-objects",level:2},{value:"experiment",id:"experiment-1",level:4},{value:"Search_experimentQueryExperiments Objects",id:"search_experimentqueryexperiments-objects",level:2},{value:"Search_experimentQuery Objects",id:"search_experimentquery-objects",level:2},{value:"experiments",id:"experiments",level:4},{value:"Watch_samplesSubscriptionMysamplesUpdateExperiments Objects",id:"watch_samplessubscriptionmysamplesupdateexperiments-objects",level:2},{value:"Watch_samplesSubscriptionMysamplesUpdate Objects",id:"watch_samplessubscriptionmysamplesupdate-objects",level:2},{value:"Watch_samplesSubscriptionMysamplesCreateExperiments Objects",id:"watch_samplessubscriptionmysamplescreateexperiments-objects",level:2},{value:"Watch_samplesSubscriptionMysamplesCreate Objects",id:"watch_samplessubscriptionmysamplescreate-objects",level:2},{value:"Create_size_featureMutationCreatesizefeatureLabelRepresentation Objects",id:"create_size_featuremutationcreatesizefeaturelabelrepresentation-objects",level:2},{value:"Create_size_featureMutation Objects",id:"create_size_featuremutation-objects",level:2},{value:"create_size_feature",id:"create_size_feature",level:4},{value:"Create_labelMutation Objects",id:"create_labelmutation-objects",level:2},{value:"create_label",id:"create_label",level:4},{value:"From_xarrayMutation Objects",id:"from_xarraymutation-objects",level:2},{value:"from_x_array",id:"from_x_array",level:4},{value:"Double_uploadMutationX Objects",id:"double_uploadmutationx-objects",level:2},{value:"Double_uploadMutationY Objects",id:"double_uploadmutationy-objects",level:2},{value:"Double_uploadMutation Objects",id:"double_uploadmutation-objects",level:2},{value:"x",id:"x-2",level:4},{value:"y",id:"y-2",level:4},{value:"Create_metricMutationCreatemetricRep Objects",id:"create_metricmutationcreatemetricrep-objects",level:2},{value:"Create_metricMutationCreatemetricCreator Objects",id:"create_metricmutationcreatemetriccreator-objects",level:2},{value:"Create_metricMutationCreatemetric Objects",id:"create_metricmutationcreatemetric-objects",level:2},{value:"rep",id:"rep",level:4},{value:"key",id:"key",level:4},{value:"Create_metricMutation Objects",id:"create_metricmutation-objects",level:2},{value:"create_metric",id:"create_metric",level:4},{value:"Create_roiMutation Objects",id:"create_roimutation-objects",level:2},{value:"create_roi",id:"create_roi",level:4},{value:"From_dfMutation Objects",id:"from_dfmutation-objects",level:2},{value:"from_df",id:"from_df",level:4},{value:"Create_sampleMutationCreatesampleCreator Objects",id:"create_samplemutationcreatesamplecreator-objects",level:2},{value:"Create_sampleMutationCreatesample Objects",id:"create_samplemutationcreatesample-objects",level:2},{value:"Create_sampleMutation Objects",id:"create_samplemutation-objects",level:2},{value:"create_sample",id:"create_sample",level:4},{value:"Create_experimentMutation Objects",id:"create_experimentmutation-objects",level:2},{value:"create_experiment",id:"create_experiment",level:4},{value:"aget_omero_file",id:"aget_omero_file",level:4},{value:"get_omero_file",id:"get_omero_file",level:4},{value:"aexpand_omerofile",id:"aexpand_omerofile",level:4},{value:"expand_omerofile",id:"expand_omerofile",level:4},{value:"asearch_omerofile",id:"asearch_omerofile",level:4},{value:"search_omerofile",id:"search_omerofile",level:4},{value:"aexpand_representation",id:"aexpand_representation",level:4},{value:"expand_representation",id:"expand_representation",level:4},{value:"aget_representation",id:"aget_representation",level:4},{value:"get_representation",id:"get_representation",level:4},{value:"asearch_representation",id:"asearch_representation",level:4},{value:"search_representation",id:"search_representation",level:4},{value:"aget_random_rep",id:"aget_random_rep",level:4},{value:"get_random_rep",id:"get_random_rep",level:4},{value:"athumbnail",id:"athumbnail",level:4},{value:"thumbnail",id:"thumbnail-2",level:4},{value:"aexpand_thumbnail",id:"aexpand_thumbnail",level:4},{value:"expand_thumbnail",id:"expand_thumbnail",level:4},{value:"aget_rois",id:"aget_rois",level:4},{value:"get_rois",id:"get_rois",level:4},{value:"atable",id:"atable",level:4},{value:"table",id:"table-2",level:4},{value:"aexpand_table",id:"aexpand_table",level:4},{value:"expand_table",id:"expand_table",level:4},{value:"asearch_tables",id:"asearch_tables",level:4},{value:"search_tables",id:"search_tables",level:4},{value:"aget_sample",id:"aget_sample",level:4},{value:"get_sample",id:"get_sample",level:4},{value:"asearch_sample",id:"asearch_sample",level:4},{value:"search_sample",id:"search_sample",level:4},{value:"aexpand_sample",id:"aexpand_sample",level:4},{value:"expand_sample",id:"expand_sample",level:4},{value:"aget_experiment",id:"aget_experiment",level:4},{value:"get_experiment",id:"get_experiment",level:4},{value:"aexpand_experiment",id:"aexpand_experiment",level:4},{value:"expand_experiment",id:"expand_experiment",level:4},{value:"asearch_experiment",id:"asearch_experiment",level:4},{value:"search_experiment",id:"search_experiment",level:4},{value:"awatch_rois",id:"awatch_rois",level:4},{value:"watch_rois",id:"watch_rois",level:4},{value:"awatch_samples",id:"awatch_samples",level:4},{value:"watch_samples",id:"watch_samples",level:4},{value:"anegotiate",id:"anegotiate",level:4},{value:"negotiate",id:"negotiate",level:4},{value:"aupload_bioimage",id:"aupload_bioimage",level:4},{value:"upload_bioimage",id:"upload_bioimage",level:4},{value:"acreate_size_feature",id:"acreate_size_feature",level:4},{value:"create_size_feature",id:"create_size_feature-1",level:4},{value:"acreate_label",id:"acreate_label",level:4},{value:"create_label",id:"create_label-1",level:4},{value:"afrom_xarray",id:"afrom_xarray",level:4},{value:"from_xarray",id:"from_xarray",level:4},{value:"adouble_upload",id:"adouble_upload",level:4},{value:"double_upload",id:"double_upload",level:4},{value:"acreate_thumbnail",id:"acreate_thumbnail",level:4},{value:"create_thumbnail",id:"create_thumbnail",level:4},{value:"acreate_metric",id:"acreate_metric",level:4},{value:"create_metric",id:"create_metric-1",level:4},{value:"acreate_roi",id:"acreate_roi",level:4},{value:"create_roi",id:"create_roi-1",level:4},{value:"afrom_df",id:"afrom_df",level:4},{value:"from_df",id:"from_df-1",level:4},{value:"acreate_sample",id:"acreate_sample",level:4},{value:"create_sample",id:"create_sample-1",level:4},{value:"acreate_experiment",id:"acreate_experiment",level:4},{value:"create_experiment",id:"create_experiment-1",level:4}],k={toc:u};function c(e){var t=e.components,a=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"omerofiletype-objects"},"OmeroFileType Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class OmeroFileType(str, Enum)\n")),(0,r.kt)("p",null,"An enumeration."),(0,r.kt)("h4",{id:"tiff"},"TIFF"),(0,r.kt)("p",null,"Tiff"),(0,r.kt)("h4",{id:"jpeg"},"JPEG"),(0,r.kt)("p",null,"Jpeg"),(0,r.kt)("h4",{id:"msr"},"MSR"),(0,r.kt)("p",null,"MSR File"),(0,r.kt)("h4",{id:"czi"},"CZI"),(0,r.kt)("p",null,"Zeiss Microscopy File"),(0,r.kt)("h4",{id:"unknown"},"UNKNOWN"),(0,r.kt)("p",null,"Unwknon File Format"),(0,r.kt)("h2",{id:"representationvariety-objects"},"RepresentationVariety Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class RepresentationVariety(str, Enum)\n")),(0,r.kt)("p",null,"An enumeration."),(0,r.kt)("h4",{id:"mask"},"MASK"),(0,r.kt)("p",null,"Mask (Value represent Labels)"),(0,r.kt)("h4",{id:"voxel"},"VOXEL"),(0,r.kt)("p",null,"Voxel (Value represent Intensity)"),(0,r.kt)("h4",{id:"rgb"},"RGB"),(0,r.kt)("p",null,"RGB (First three channel represent RGB)"),(0,r.kt)("h4",{id:"unknown-1"},"UNKNOWN"),(0,r.kt)("p",null,"Unknown"),(0,r.kt)("h2",{id:"representationvarietyinput-objects"},"RepresentationVarietyInput Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class RepresentationVarietyInput(str, Enum)\n")),(0,r.kt)("p",null,"Variety expresses the Type of Representation we are dealing with"),(0,r.kt)("h4",{id:"mask-1"},"MASK"),(0,r.kt)("p",null,"Mask (Value represent Labels)"),(0,r.kt)("h4",{id:"voxel-1"},"VOXEL"),(0,r.kt)("p",null,"Voxel (Value represent Intensity)"),(0,r.kt)("h4",{id:"rgb-1"},"RGB"),(0,r.kt)("p",null,"RGB (First three channel represent RGB)"),(0,r.kt)("h4",{id:"unknown-2"},"UNKNOWN"),(0,r.kt)("p",null,"Unknown"),(0,r.kt)("h2",{id:"roitype-objects"},"ROIType Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class ROIType(str, Enum)\n")),(0,r.kt)("p",null,"An enumeration."),(0,r.kt)("h4",{id:"ellipse"},"ELLIPSE"),(0,r.kt)("p",null,"Ellipse"),(0,r.kt)("h4",{id:"polygon"},"POLYGON"),(0,r.kt)("p",null,"POLYGON"),(0,r.kt)("h4",{id:"line"},"LINE"),(0,r.kt)("p",null,"Line"),(0,r.kt)("h4",{id:"rectangle"},"RECTANGLE"),(0,r.kt)("p",null,"Rectangle"),(0,r.kt)("h4",{id:"path"},"PATH"),(0,r.kt)("p",null,"Path"),(0,r.kt)("h4",{id:"unknown-3"},"UNKNOWN"),(0,r.kt)("p",null,"Unknown"),(0,r.kt)("h2",{id:"roitypeinput-objects"},"RoiTypeInput Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class RoiTypeInput(str, Enum)\n")),(0,r.kt)("p",null,"An enumeration."),(0,r.kt)("h4",{id:"ellipsis"},"ELLIPSIS"),(0,r.kt)("p",null,"Ellipse"),(0,r.kt)("h4",{id:"polygon-1"},"POLYGON"),(0,r.kt)("p",null,"POLYGON"),(0,r.kt)("h4",{id:"line-1"},"LINE"),(0,r.kt)("p",null,"Line"),(0,r.kt)("h4",{id:"rectangle-1"},"RECTANGLE"),(0,r.kt)("p",null,"Rectangle"),(0,r.kt)("h4",{id:"path-1"},"PATH"),(0,r.kt)("p",null,"Path"),(0,r.kt)("h4",{id:"unknown-4"},"UNKNOWN"),(0,r.kt)("p",null,"Unknown"),(0,r.kt)("h2",{id:"inputvector-objects"},"InputVector Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class InputVector(BaseModel, Vectorizable)\n")),(0,r.kt)("h4",{id:"x"},"x"),(0,r.kt)("p",null,"X-coordinate"),(0,r.kt)("h4",{id:"y"},"y"),(0,r.kt)("p",null,"Y-coordinate"),(0,r.kt)("h4",{id:"z"},"z"),(0,r.kt)("p",null,"Z-coordinate"),(0,r.kt)("h2",{id:"representationfragmentsample-objects"},"RepresentationFragmentSample Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class RepresentationFragmentSample(Sample, BaseModel)\n")),(0,r.kt)("p",null,"Samples are storage containers for representations. A Sample is to be understood analogous to a Biological Sample. It existed in Time (the time of acquisiton and experimental procedure),\nwas measured in space (x,y,z) and in different modalities (c). Sample therefore provide a datacontainer where each Representation of\nthe data shares the same dimensions. Every transaction to our image data is still part of the original acuqistion, so also filtered images are refering back to the sample"),(0,r.kt)("h2",{id:"representationfragment-objects"},"RepresentationFragment Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class RepresentationFragment(Representation, BaseModel)\n")),(0,r.kt)("h4",{id:"sample"},"sample"),(0,r.kt)("p",null,"The Sample this representation belongs to"),(0,r.kt)("h4",{id:"type"},"type"),(0,r.kt)("p",null,"The Representation can have varying types, consult your API"),(0,r.kt)("h4",{id:"variety"},"variety"),(0,r.kt)("p",null,"The Representation can have varying types, consult your API"),(0,r.kt)("h4",{id:"name"},"name"),(0,r.kt)("p",null,"Cleartext name"),(0,r.kt)("h2",{id:"roifragmentvectors-objects"},"ROIFragmentVectors Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class ROIFragmentVectors(BaseModel)\n")),(0,r.kt)("h4",{id:"x-1"},"x"),(0,r.kt)("p",null,"X-coordinate"),(0,r.kt)("h4",{id:"y-1"},"y"),(0,r.kt)("p",null,"Y-coordinate"),(0,r.kt)("h4",{id:"z-1"},"z"),(0,r.kt)("p",null,"Z-coordinate"),(0,r.kt)("h2",{id:"roifragmentrepresentation-objects"},"ROIFragmentRepresentation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class ROIFragmentRepresentation(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h2",{id:"roifragmentcreator-objects"},"ROIFragmentCreator Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class ROIFragmentCreator(BaseModel)\n")),(0,r.kt)("p",null,"A reflection on the real User"),(0,r.kt)("h4",{id:"color"},"color"),(0,r.kt)("p",null,"The associated color for this user"),(0,r.kt)("h2",{id:"roifragment-objects"},"ROIFragment Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class ROIFragment(ROI, BaseModel)\n")),(0,r.kt)("h4",{id:"type-1"},"type"),(0,r.kt)("p",null,"The Representation can have varying types, consult your API"),(0,r.kt)("h2",{id:"tablefragmentcreator-objects"},"TableFragmentCreator Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TableFragmentCreator(BaseModel)\n")),(0,r.kt)("p",null,"A reflection on the real User"),(0,r.kt)("h2",{id:"tablefragmentsample-objects"},"TableFragmentSample Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TableFragmentSample(Sample, BaseModel)\n")),(0,r.kt)("p",null,"Samples are storage containers for representations. A Sample is to be understood analogous to a Biological Sample. It existed in Time (the time of acquisiton and experimental procedure),\nwas measured in space (x,y,z) and in different modalities (c). Sample therefore provide a datacontainer where each Representation of\nthe data shares the same dimensions. Every transaction to our image data is still part of the original acuqistion, so also filtered images are refering back to the sample"),(0,r.kt)("h2",{id:"tablefragmentrepresentation-objects"},"TableFragmentRepresentation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TableFragmentRepresentation(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h2",{id:"tablefragmentexperiment-objects"},"TableFragmentExperiment Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TableFragmentExperiment(Experiment, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants @elements/experiment"),(0,r.kt)("h2",{id:"tablefragment-objects"},"TableFragment Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TableFragment(Table, BaseModel)\n")),(0,r.kt)("h4",{id:"tags"},"tags"),(0,r.kt)("p",null,"A comma-separated list of tags."),(0,r.kt)("h4",{id:"store"},"store"),(0,r.kt)("p",null,"The location of the Parquet on the Storage System (S3 or Media-URL)"),(0,r.kt)("h2",{id:"samplefragmentrepresentations-objects"},"SampleFragmentRepresentations Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class SampleFragmentRepresentations(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h2",{id:"samplefragmentexperiments-objects"},"SampleFragmentExperiments Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class SampleFragmentExperiments(Experiment, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants @elements/experiment"),(0,r.kt)("h2",{id:"experimentfragmentcreator-objects"},"ExperimentFragmentCreator Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class ExperimentFragmentCreator(BaseModel)\n")),(0,r.kt)("p",null,"A reflection on the real User"),(0,r.kt)("h2",{id:"get_omero_filequery-objects"},"Get","_","omero","_","fileQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Get_omero_fileQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"omerofile"},"omerofile"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"expand_omerofilequery-objects"},"Expand","_","omerofileQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Expand_omerofileQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"omerofile-1"},"omerofile"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"search_omerofilequery-objects"},"Search","_","omerofileQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_omerofileQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"omerofiles"},"omerofiles"),(0,r.kt)("p",null,"My samples return all of the users samples attached to the current user"),(0,r.kt)("h2",{id:"expand_representationquery-objects"},"Expand","_","representationQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Expand_representationQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"representation"},"representation"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"get_representationquery-objects"},"Get","_","representationQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Get_representationQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"representation-1"},"representation"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"search_representationqueryrepresentations-objects"},"Search","_","representationQueryRepresentations Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_representationQueryRepresentations(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h4",{id:"label"},"label"),(0,r.kt)("p",null,"Cleartext name"),(0,r.kt)("h2",{id:"search_representationquery-objects"},"Search","_","representationQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_representationQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"representations"},"representations"),(0,r.kt)("p",null,"All represetations"),(0,r.kt)("h2",{id:"get_random_repquery-objects"},"Get","_","random","_","repQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Get_random_repQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"random_representation"},"random","_","representation"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"thumbnailquery-objects"},"ThumbnailQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class ThumbnailQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"thumbnail"},"thumbnail"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"expand_thumbnailquery-objects"},"Expand","_","thumbnailQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Expand_thumbnailQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"thumbnail-1"},"thumbnail"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"get_roisquery-objects"},"Get","_","roisQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Get_roisQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"rois"},"rois"),(0,r.kt)("p",null,"All represetations"),(0,r.kt)("h2",{id:"tablequery-objects"},"TableQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TableQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"table"},"table"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"expand_tablequery-objects"},"Expand","_","tableQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Expand_tableQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"table-1"},"table"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"search_tablesquery-objects"},"Search","_","tablesQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_tablesQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"tables"},"tables"),(0,r.kt)("p",null,"My samples return all of the users samples attached to the current user"),(0,r.kt)("h2",{id:"get_samplequery-objects"},"Get","_","sampleQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Get_sampleQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"sample-1"},"sample"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"search_samplequerysamples-objects"},"Search","_","sampleQuerySamples Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_sampleQuerySamples(Sample, BaseModel)\n")),(0,r.kt)("p",null,"Samples are storage containers for representations. A Sample is to be understood analogous to a Biological Sample. It existed in Time (the time of acquisiton and experimental procedure),\nwas measured in space (x,y,z) and in different modalities (c). Sample therefore provide a datacontainer where each Representation of\nthe data shares the same dimensions. Every transaction to our image data is still part of the original acuqistion, so also filtered images are refering back to the sample"),(0,r.kt)("h2",{id:"search_samplequery-objects"},"Search","_","sampleQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_sampleQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"samples"},"samples"),(0,r.kt)("p",null,"All Samples"),(0,r.kt)("h2",{id:"expand_samplequery-objects"},"Expand","_","sampleQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Expand_sampleQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"sample-2"},"sample"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"get_experimentquery-objects"},"Get","_","experimentQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Get_experimentQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"experiment"},"experiment"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"expand_experimentquery-objects"},"Expand","_","experimentQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Expand_experimentQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"experiment-1"},"experiment"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("h2",{id:"search_experimentqueryexperiments-objects"},"Search","_","experimentQueryExperiments Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_experimentQueryExperiments(Experiment, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants @elements/experiment"),(0,r.kt)("h2",{id:"search_experimentquery-objects"},"Search","_","experimentQuery Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Search_experimentQuery(BaseModel)\n")),(0,r.kt)("h4",{id:"experiments"},"experiments"),(0,r.kt)("p",null,"All Samples"),(0,r.kt)("h2",{id:"watch_samplessubscriptionmysamplesupdateexperiments-objects"},"Watch","_","samplesSubscriptionMysamplesUpdateExperiments Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Watch_samplesSubscriptionMysamplesUpdateExperiments(Experiment, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants @elements/experiment"),(0,r.kt)("h2",{id:"watch_samplessubscriptionmysamplesupdate-objects"},"Watch","_","samplesSubscriptionMysamplesUpdate Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Watch_samplesSubscriptionMysamplesUpdate(Sample, BaseModel)\n")),(0,r.kt)("p",null,"Samples are storage containers for representations. A Sample is to be understood analogous to a Biological Sample. It existed in Time (the time of acquisiton and experimental procedure),\nwas measured in space (x,y,z) and in different modalities (c). Sample therefore provide a datacontainer where each Representation of\nthe data shares the same dimensions. Every transaction to our image data is still part of the original acuqistion, so also filtered images are refering back to the sample"),(0,r.kt)("h2",{id:"watch_samplessubscriptionmysamplescreateexperiments-objects"},"Watch","_","samplesSubscriptionMysamplesCreateExperiments Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Watch_samplesSubscriptionMysamplesCreateExperiments(Experiment, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants @elements/experiment"),(0,r.kt)("h2",{id:"watch_samplessubscriptionmysamplescreate-objects"},"Watch","_","samplesSubscriptionMysamplesCreate Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Watch_samplesSubscriptionMysamplesCreate(Sample, BaseModel)\n")),(0,r.kt)("p",null,"Samples are storage containers for representations. A Sample is to be understood analogous to a Biological Sample. It existed in Time (the time of acquisiton and experimental procedure),\nwas measured in space (x,y,z) and in different modalities (c). Sample therefore provide a datacontainer where each Representation of\nthe data shares the same dimensions. Every transaction to our image data is still part of the original acuqistion, so also filtered images are refering back to the sample"),(0,r.kt)("h2",{id:"create_size_featuremutationcreatesizefeaturelabelrepresentation-objects"},"Create","_","size","_","featureMutationCreatesizefeatureLabelRepresentation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_size_featureMutationCreatesizefeatureLabelRepresentation(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h2",{id:"create_size_featuremutation-objects"},"Create","_","size","_","featureMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_size_featureMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"create_size_feature"},"create","_","size","_","feature"),(0,r.kt)("p",null,"Creates a Sample"),(0,r.kt)("h2",{id:"create_labelmutation-objects"},"Create","_","labelMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_labelMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"create_label"},"create","_","label"),(0,r.kt)("p",null,"Creates a Sample"),(0,r.kt)("h2",{id:"from_xarraymutation-objects"},"From","_","xarrayMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class From_xarrayMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"from_x_array"},"from","_","x","_","array"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("h2",{id:"double_uploadmutationx-objects"},"Double","_","uploadMutationX Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Double_uploadMutationX(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h2",{id:"double_uploadmutationy-objects"},"Double","_","uploadMutationY Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Double_uploadMutationY(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h2",{id:"double_uploadmutation-objects"},"Double","_","uploadMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Double_uploadMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"x-2"},"x"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("h4",{id:"y-2"},"y"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("h2",{id:"create_metricmutationcreatemetricrep-objects"},"Create","_","metricMutationCreatemetricRep Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_metricMutationCreatemetricRep(Representation, BaseModel)\n")),(0,r.kt)("p",null,"A Representation is a multi-dimensional Array that can do what ever it wants"),(0,r.kt)("p",null,"@elements/rep:latest"),(0,r.kt)("h2",{id:"create_metricmutationcreatemetriccreator-objects"},"Create","_","metricMutationCreatemetricCreator Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_metricMutationCreatemetricCreator(BaseModel)\n")),(0,r.kt)("p",null,"A reflection on the real User"),(0,r.kt)("h2",{id:"create_metricmutationcreatemetric-objects"},"Create","_","metricMutationCreatemetric Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_metricMutationCreatemetric(BaseModel)\n")),(0,r.kt)("h4",{id:"rep"},"rep"),(0,r.kt)("p",null,"The Representatoin this Metric belongs to"),(0,r.kt)("h4",{id:"key"},"key"),(0,r.kt)("p",null,"The Key"),(0,r.kt)("h2",{id:"create_metricmutation-objects"},"Create","_","metricMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_metricMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"create_metric"},"create","_","metric"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("h2",{id:"create_roimutation-objects"},"Create","_","roiMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_roiMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"create_roi"},"create","_","roi"),(0,r.kt)("p",null,"Creates a Sample"),(0,r.kt)("h2",{id:"from_dfmutation-objects"},"From","_","dfMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class From_dfMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"from_df"},"from","_","df"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("h2",{id:"create_samplemutationcreatesamplecreator-objects"},"Create","_","sampleMutationCreatesampleCreator Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_sampleMutationCreatesampleCreator(BaseModel)\n")),(0,r.kt)("p",null,"A reflection on the real User"),(0,r.kt)("h2",{id:"create_samplemutationcreatesample-objects"},"Create","_","sampleMutationCreatesample Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_sampleMutationCreatesample(Sample, BaseModel)\n")),(0,r.kt)("p",null,"Samples are storage containers for representations. A Sample is to be understood analogous to a Biological Sample. It existed in Time (the time of acquisiton and experimental procedure),\nwas measured in space (x,y,z) and in different modalities (c). Sample therefore provide a datacontainer where each Representation of\nthe data shares the same dimensions. Every transaction to our image data is still part of the original acuqistion, so also filtered images are refering back to the sample"),(0,r.kt)("h2",{id:"create_samplemutation-objects"},"Create","_","sampleMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_sampleMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"create_sample"},"create","_","sample"),(0,r.kt)("p",null,"Creates a Sample\\n"),(0,r.kt)("h2",{id:"create_experimentmutation-objects"},"Create","_","experimentMutation Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Create_experimentMutation(BaseModel)\n")),(0,r.kt)("h4",{id:"create_experiment"},"create","_","experiment"),(0,r.kt)("p",null,"Create an experiment (only signed in users)"),(0,r.kt)("h4",{id:"aget_omero_file"},"aget","_","omero","_","file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_omero_file(id: Optional[ID], rath: MikroRath = None) -> OmeroFileFragment\n")),(0,r.kt)("p",null,"get_omero_file"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  OmeroFileFragment"),(0,r.kt)("h4",{id:"get_omero_file"},"get","_","omero","_","file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_omero_file(id: Optional[ID], rath: MikroRath = None) -> OmeroFileFragment\n")),(0,r.kt)("p",null,"get_omero_file"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  OmeroFileFragment"),(0,r.kt)("h4",{id:"aexpand_omerofile"},"aexpand","_","omerofile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aexpand_omerofile(id: Optional[ID], rath: MikroRath = None) -> OmeroFileFragment\n")),(0,r.kt)("p",null,"expand_omerofile"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  OmeroFileFragment"),(0,r.kt)("h4",{id:"expand_omerofile"},"expand","_","omerofile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def expand_omerofile(id: Optional[ID], rath: MikroRath = None) -> OmeroFileFragment\n")),(0,r.kt)("p",null,"expand_omerofile"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  OmeroFileFragment"),(0,r.kt)("h4",{id:"asearch_omerofile"},"asearch","_","omerofile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def asearch_omerofile(search: Optional[str], rath: MikroRath = None) -> Optional[List[Optional[Search_omerofileQueryOmerofiles]]]\n")),(0,r.kt)("p",null,"search_omerofile"),(0,r.kt)("p",null,"omerofiles: My samples return all of the users samples attached to the current user"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"str")," - search"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_omerofileQuery"),(0,r.kt)("h4",{id:"search_omerofile"},"search","_","omerofile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def search_omerofile(search: Optional[str], rath: MikroRath = None) -> Optional[List[Optional[Search_omerofileQueryOmerofiles]]]\n")),(0,r.kt)("p",null,"search_omerofile"),(0,r.kt)("p",null,"omerofiles: My samples return all of the users samples attached to the current user"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"str")," - search"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_omerofileQuery"),(0,r.kt)("h4",{id:"aexpand_representation"},"aexpand","_","representation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aexpand_representation(id: Optional[ID], rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"expand_representation"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"expand_representation"},"expand","_","representation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def expand_representation(id: Optional[ID], rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"expand_representation"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"aget_representation"},"aget","_","representation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_representation(id: Optional[ID], rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"get_representation"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"get_representation"},"get","_","representation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_representation(id: Optional[ID], rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"get_representation"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"asearch_representation"},"asearch","_","representation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def asearch_representation(search: Optional[str] = None, rath: MikroRath = None) -> Optional[List[Optional[Search_representationQueryRepresentations]]]\n")),(0,r.kt)("p",null,"search_representation"),(0,r.kt)("p",null,"representations: All represetations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - search."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_representationQuery"),(0,r.kt)("h4",{id:"search_representation"},"search","_","representation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def search_representation(search: Optional[str] = None, rath: MikroRath = None) -> Optional[List[Optional[Search_representationQueryRepresentations]]]\n")),(0,r.kt)("p",null,"search_representation"),(0,r.kt)("p",null,"representations: All represetations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - search."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_representationQuery"),(0,r.kt)("h4",{id:"aget_random_rep"},"aget","_","random","_","rep"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_random_rep(rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"get_random_rep"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"get_random_rep"},"get","_","random","_","rep"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_random_rep(rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"get_random_rep"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"athumbnail"},"athumbnail"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def athumbnail(id: Optional[ID], rath: MikroRath = None) -> ThumbnailFragment\n")),(0,r.kt)("p",null,"Thumbnail"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ThumbnailFragment"),(0,r.kt)("h4",{id:"thumbnail-2"},"thumbnail"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def thumbnail(id: Optional[ID], rath: MikroRath = None) -> ThumbnailFragment\n")),(0,r.kt)("p",null,"Thumbnail"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ThumbnailFragment"),(0,r.kt)("h4",{id:"aexpand_thumbnail"},"aexpand","_","thumbnail"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aexpand_thumbnail(id: Optional[ID], rath: MikroRath = None) -> ThumbnailFragment\n")),(0,r.kt)("p",null,"expand_thumbnail"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ThumbnailFragment"),(0,r.kt)("h4",{id:"expand_thumbnail"},"expand","_","thumbnail"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def expand_thumbnail(id: Optional[ID], rath: MikroRath = None) -> ThumbnailFragment\n")),(0,r.kt)("p",null,"expand_thumbnail"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ThumbnailFragment"),(0,r.kt)("h4",{id:"aget_rois"},"aget","_","rois"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_rois(representation: Optional[ID], type: Optional[List[Optional[RoiTypeInput]]] = None, rath: MikroRath = None) -> ROIFragment\n")),(0,r.kt)("p",null,"get_rois"),(0,r.kt)("p",null,"All represetations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[RoiTypeInput]","]], optional")," - type."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ROIFragment"),(0,r.kt)("h4",{id:"get_rois"},"get","_","rois"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_rois(representation: Optional[ID], type: Optional[List[Optional[RoiTypeInput]]] = None, rath: MikroRath = None) -> ROIFragment\n")),(0,r.kt)("p",null,"get_rois"),(0,r.kt)("p",null,"All represetations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[RoiTypeInput]","]], optional")," - type."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ROIFragment"),(0,r.kt)("h4",{id:"atable"},"atable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def atable(id: Optional[ID], rath: MikroRath = None) -> TableFragment\n")),(0,r.kt)("p",null,"Table"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  TableFragment"),(0,r.kt)("h4",{id:"table-2"},"table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def table(id: Optional[ID], rath: MikroRath = None) -> TableFragment\n")),(0,r.kt)("p",null,"Table"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  TableFragment"),(0,r.kt)("h4",{id:"aexpand_table"},"aexpand","_","table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aexpand_table(id: Optional[ID], rath: MikroRath = None) -> TableFragment\n")),(0,r.kt)("p",null,"expand_table"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  TableFragment"),(0,r.kt)("h4",{id:"expand_table"},"expand","_","table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def expand_table(id: Optional[ID], rath: MikroRath = None) -> TableFragment\n")),(0,r.kt)("p",null,"expand_table"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  TableFragment"),(0,r.kt)("h4",{id:"asearch_tables"},"asearch","_","tables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def asearch_tables(rath: MikroRath = None) -> Optional[List[Optional[Search_tablesQueryTables]]]\n")),(0,r.kt)("p",null,"search_tables"),(0,r.kt)("p",null,"tables: My samples return all of the users samples attached to the current user"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_tablesQuery"),(0,r.kt)("h4",{id:"search_tables"},"search","_","tables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def search_tables(rath: MikroRath = None) -> Optional[List[Optional[Search_tablesQueryTables]]]\n")),(0,r.kt)("p",null,"search_tables"),(0,r.kt)("p",null,"tables: My samples return all of the users samples attached to the current user"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_tablesQuery"),(0,r.kt)("h4",{id:"aget_sample"},"aget","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_sample(id: Optional[ID], rath: MikroRath = None) -> SampleFragment\n")),(0,r.kt)("p",null,"get_sample"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  SampleFragment"),(0,r.kt)("h4",{id:"get_sample"},"get","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_sample(id: Optional[ID], rath: MikroRath = None) -> SampleFragment\n")),(0,r.kt)("p",null,"get_sample"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  SampleFragment"),(0,r.kt)("h4",{id:"asearch_sample"},"asearch","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def asearch_sample(search: Optional[str] = None, rath: MikroRath = None) -> Optional[List[Optional[Search_sampleQuerySamples]]]\n")),(0,r.kt)("p",null,"search_sample"),(0,r.kt)("p",null,"samples: All Samples"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - search."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_sampleQuery"),(0,r.kt)("h4",{id:"search_sample"},"search","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def search_sample(search: Optional[str] = None, rath: MikroRath = None) -> Optional[List[Optional[Search_sampleQuerySamples]]]\n")),(0,r.kt)("p",null,"search_sample"),(0,r.kt)("p",null,"samples: All Samples"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - search."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_sampleQuery"),(0,r.kt)("h4",{id:"aexpand_sample"},"aexpand","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aexpand_sample(id: Optional[ID], rath: MikroRath = None) -> SampleFragment\n")),(0,r.kt)("p",null,"expand_sample"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  SampleFragment"),(0,r.kt)("h4",{id:"expand_sample"},"expand","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def expand_sample(id: Optional[ID], rath: MikroRath = None) -> SampleFragment\n")),(0,r.kt)("p",null,"expand_sample"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  SampleFragment"),(0,r.kt)("h4",{id:"aget_experiment"},"aget","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_experiment(id: Optional[ID], rath: MikroRath = None) -> ExperimentFragment\n")),(0,r.kt)("p",null,"get_experiment"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ExperimentFragment"),(0,r.kt)("h4",{id:"get_experiment"},"get","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_experiment(id: Optional[ID], rath: MikroRath = None) -> ExperimentFragment\n")),(0,r.kt)("p",null,"get_experiment"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ExperimentFragment"),(0,r.kt)("h4",{id:"aexpand_experiment"},"aexpand","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aexpand_experiment(id: Optional[ID], rath: MikroRath = None) -> ExperimentFragment\n")),(0,r.kt)("p",null,"expand_experiment"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ExperimentFragment"),(0,r.kt)("h4",{id:"expand_experiment"},"expand","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def expand_experiment(id: Optional[ID], rath: MikroRath = None) -> ExperimentFragment\n")),(0,r.kt)("p",null,"expand_experiment"),(0,r.kt)("p",null,"Get a single representation by ID"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ExperimentFragment"),(0,r.kt)("h4",{id:"asearch_experiment"},"asearch","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def asearch_experiment(search: Optional[str] = None, rath: MikroRath = None) -> Optional[List[Optional[Search_experimentQueryExperiments]]]\n")),(0,r.kt)("p",null,"search_experiment"),(0,r.kt)("p",null,"experiments: All Samples"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - search."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_experimentQuery"),(0,r.kt)("h4",{id:"search_experiment"},"search","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def search_experiment(search: Optional[str] = None, rath: MikroRath = None) -> Optional[List[Optional[Search_experimentQueryExperiments]]]\n")),(0,r.kt)("p",null,"search_experiment"),(0,r.kt)("p",null,"experiments: All Samples"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"search")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - search."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Search_experimentQuery"),(0,r.kt)("h4",{id:"awatch_rois"},"awatch","_","rois"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def awatch_rois(representation: Optional[ID], rath: MikroRath = None) -> AsyncIterator[Optional[Watch_roisSubscriptionRois]]\n")),(0,r.kt)("p",null,"watch_rois"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Watch_roisSubscription"),(0,r.kt)("h4",{id:"watch_rois"},"watch","_","rois"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def watch_rois(representation: Optional[ID], rath: MikroRath = None) -> Iterator[Optional[Watch_roisSubscriptionRois]]\n")),(0,r.kt)("p",null,"watch_rois"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Watch_roisSubscription"),(0,r.kt)("h4",{id:"awatch_samples"},"awatch","_","samples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def awatch_samples(rath: MikroRath = None) -> AsyncIterator[Optional[Watch_samplesSubscriptionMysamples]]\n")),(0,r.kt)("p",null,"watch_samples"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Watch_samplesSubscription"),(0,r.kt)("h4",{id:"watch_samples"},"watch","_","samples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def watch_samples(rath: MikroRath = None) -> Iterator[Optional[Watch_samplesSubscriptionMysamples]]\n")),(0,r.kt)("p",null,"watch_samples"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Watch_samplesSubscription"),(0,r.kt)("h4",{id:"anegotiate"},"anegotiate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def anegotiate(rath: MikroRath = None) -> Optional[Dict]\n")),(0,r.kt)("p",null,"negotiate"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Optional","[Dict]"),(0,r.kt)("h4",{id:"negotiate"},"negotiate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def negotiate(rath: MikroRath = None) -> Optional[Dict]\n")),(0,r.kt)("p",null,"negotiate"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Optional","[Dict]"),(0,r.kt)("h4",{id:"aupload_bioimage"},"aupload","_","bioimage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def aupload_bioimage(file: Optional[Upload], rath: MikroRath = None) -> Optional[Upload_bioimageMutationUploadomerofile]\n")),(0,r.kt)("p",null,"upload_bioimage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"file")," ",(0,r.kt)("em",{parentName:"li"},"Upload")," - file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Upload_bioimageMutation"),(0,r.kt)("h4",{id:"upload_bioimage"},"upload","_","bioimage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def upload_bioimage(file: Optional[Upload], rath: MikroRath = None) -> Optional[Upload_bioimageMutationUploadomerofile]\n")),(0,r.kt)("p",null,"upload_bioimage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"file")," ",(0,r.kt)("em",{parentName:"li"},"Upload")," - file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Upload_bioimageMutation"),(0,r.kt)("h4",{id:"acreate_size_feature"},"acreate","_","size","_","feature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def acreate_size_feature(label: Optional[ID], size: Optional[float], creator: Optional[ID] = None, rath: MikroRath = None) -> Optional[Create_size_featureMutationCreatesizefeature]\n")),(0,r.kt)("p",null,"create_size_feature"),(0,r.kt)("p",null,"createSizeFeature: Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"label")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - label"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size")," ",(0,r.kt)("em",{parentName:"li"},"float")," - size"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_size_featureMutation"),(0,r.kt)("h4",{id:"create_size_feature-1"},"create","_","size","_","feature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_size_feature(label: Optional[ID], size: Optional[float], creator: Optional[ID] = None, rath: MikroRath = None) -> Optional[Create_size_featureMutationCreatesizefeature]\n")),(0,r.kt)("p",null,"create_size_feature"),(0,r.kt)("p",null,"createSizeFeature: Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"label")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - label"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size")," ",(0,r.kt)("em",{parentName:"li"},"float")," - size"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_size_featureMutation"),(0,r.kt)("h4",{id:"acreate_label"},"acreate","_","label"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def acreate_label(instance: Optional[int], representation: Optional[ID], creator: Optional[ID], name: Optional[str] = None, rath: MikroRath = None) -> Optional[Create_labelMutationCreatelabel]\n")),(0,r.kt)("p",null,"create_label"),(0,r.kt)("p",null,"createLabel: Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"instance")," ",(0,r.kt)("em",{parentName:"li"},"int")," - instance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - creator"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_labelMutation"),(0,r.kt)("h4",{id:"create_label-1"},"create","_","label"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_label(instance: Optional[int], representation: Optional[ID], creator: Optional[ID], name: Optional[str] = None, rath: MikroRath = None) -> Optional[Create_labelMutationCreatelabel]\n")),(0,r.kt)("p",null,"create_label"),(0,r.kt)("p",null,"createLabel: Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"instance")," ",(0,r.kt)("em",{parentName:"li"},"int")," - instance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - creator"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_labelMutation"),(0,r.kt)("h4",{id:"afrom_xarray"},"afrom","_","xarray"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def afrom_xarray(xarray: Optional[XArray], name: Optional[str] = None, variety: Optional[RepresentationVarietyInput] = None, origins: Optional[List[Optional[ID]]] = None, tags: Optional[List[Optional[str]]] = None, sample: Optional[ID] = None, omero: Optional[OmeroRepresentationInput] = None, rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"from_xarray"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"xarray")," ",(0,r.kt)("em",{parentName:"li"},"XArray")," - xarray"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"variety")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[RepresentationVarietyInput]",", optional")," - variety."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"origins")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[ID]","]], optional")," - origins."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tags")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[str]","]], optional")," - tags."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sample")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - sample."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"omero")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[OmeroRepresentationInput]",", optional")," - omero."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"from_xarray"},"from","_","xarray"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def from_xarray(xarray: Optional[XArray], name: Optional[str] = None, variety: Optional[RepresentationVarietyInput] = None, origins: Optional[List[Optional[ID]]] = None, tags: Optional[List[Optional[str]]] = None, sample: Optional[ID] = None, omero: Optional[OmeroRepresentationInput] = None, rath: MikroRath = None) -> RepresentationFragment\n")),(0,r.kt)("p",null,"from_xarray"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"xarray")," ",(0,r.kt)("em",{parentName:"li"},"XArray")," - xarray"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"variety")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[RepresentationVarietyInput]",", optional")," - variety."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"origins")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[ID]","]], optional")," - origins."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tags")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[str]","]], optional")," - tags."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sample")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - sample."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"omero")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[OmeroRepresentationInput]",", optional")," - omero."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  RepresentationFragment"),(0,r.kt)("h4",{id:"adouble_upload"},"adouble","_","upload"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def adouble_upload(xarray: Optional[XArray], name: Optional[str] = None, origins: Optional[List[Optional[ID]]] = None, tags: Optional[List[Optional[str]]] = None, sample: Optional[ID] = None, omero: Optional[OmeroRepresentationInput] = None, rath: MikroRath = None) -> Double_uploadMutation\n")),(0,r.kt)("p",null,"double_upload"),(0,r.kt)("p",null,"x: Creates a Representation\ny: Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"xarray")," ",(0,r.kt)("em",{parentName:"li"},"XArray")," - xarray"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"origins")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[ID]","]], optional")," - origins."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tags")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[str]","]], optional")," - tags."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sample")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - sample."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"omero")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[OmeroRepresentationInput]",", optional")," - omero."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Double_uploadMutation"),(0,r.kt)("h4",{id:"double_upload"},"double","_","upload"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def double_upload(xarray: Optional[XArray], name: Optional[str] = None, origins: Optional[List[Optional[ID]]] = None, tags: Optional[List[Optional[str]]] = None, sample: Optional[ID] = None, omero: Optional[OmeroRepresentationInput] = None, rath: MikroRath = None) -> Double_uploadMutation\n")),(0,r.kt)("p",null,"double_upload"),(0,r.kt)("p",null,"x: Creates a Representation\ny: Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"xarray")," ",(0,r.kt)("em",{parentName:"li"},"XArray")," - xarray"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"origins")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[ID]","]], optional")," - origins."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tags")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[str]","]], optional")," - tags."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sample")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - sample."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"omero")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[OmeroRepresentationInput]",", optional")," - omero."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Double_uploadMutation"),(0,r.kt)("h4",{id:"acreate_thumbnail"},"acreate","_","thumbnail"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def acreate_thumbnail(rep: Optional[ID], file: Optional[File], rath: MikroRath = None) -> ThumbnailFragment\n")),(0,r.kt)("p",null,"create_thumbnail"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rep")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - rep"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"file")," ",(0,r.kt)("em",{parentName:"li"},"File")," - file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ThumbnailFragment"),(0,r.kt)("h4",{id:"create_thumbnail"},"create","_","thumbnail"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_thumbnail(rep: Optional[ID], file: Optional[File], rath: MikroRath = None) -> ThumbnailFragment\n")),(0,r.kt)("p",null,"create_thumbnail"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rep")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - rep"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"file")," ",(0,r.kt)("em",{parentName:"li"},"File")," - file"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ThumbnailFragment"),(0,r.kt)("h4",{id:"acreate_metric"},"acreate","_","metric"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def acreate_metric(key: Optional[str], value: Optional[Dict], rep: Optional[ID] = None, sample: Optional[ID] = None, experiment: Optional[ID] = None, rath: MikroRath = None) -> Optional[Create_metricMutationCreatemetric]\n")),(0,r.kt)("p",null,"create_metric"),(0,r.kt)("p",null,"createMetric: Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," ",(0,r.kt)("em",{parentName:"li"},"str")," - key"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," ",(0,r.kt)("em",{parentName:"li"},"Dict")," - value"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rep")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - rep."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sample")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - sample."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"experiment")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - experiment."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_metricMutation"),(0,r.kt)("h4",{id:"create_metric-1"},"create","_","metric"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_metric(key: Optional[str], value: Optional[Dict], rep: Optional[ID] = None, sample: Optional[ID] = None, experiment: Optional[ID] = None, rath: MikroRath = None) -> Optional[Create_metricMutationCreatemetric]\n")),(0,r.kt)("p",null,"create_metric"),(0,r.kt)("p",null,"createMetric: Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," ",(0,r.kt)("em",{parentName:"li"},"str")," - key"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," ",(0,r.kt)("em",{parentName:"li"},"Dict")," - value"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rep")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - rep."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sample")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - sample."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"experiment")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - experiment."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_metricMutation"),(0,r.kt)("h4",{id:"acreate_roi"},"acreate","_","roi"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def acreate_roi(representation: Optional[ID], vectors: Optional[List[Optional[InputVector]]], type: Optional[RoiTypeInput], creator: Optional[ID] = None, rath: MikroRath = None) -> ROIFragment\n")),(0,r.kt)("p",null,"create_roi"),(0,r.kt)("p",null,"Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vectors")," ",(0,r.kt)("em",{parentName:"li"},"List[Optional","[InputVector]","]")," - vectors"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," ",(0,r.kt)("em",{parentName:"li"},"RoiTypeInput")," - type"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ROIFragment"),(0,r.kt)("h4",{id:"create_roi-1"},"create","_","roi"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_roi(representation: Optional[ID], vectors: Optional[List[Optional[InputVector]]], type: Optional[RoiTypeInput], creator: Optional[ID] = None, rath: MikroRath = None) -> ROIFragment\n")),(0,r.kt)("p",null,"create_roi"),(0,r.kt)("p",null,"Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"representation")," ",(0,r.kt)("em",{parentName:"li"},"ID")," - representation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vectors")," ",(0,r.kt)("em",{parentName:"li"},"List[Optional","[InputVector]","]")," - vectors"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type")," ",(0,r.kt)("em",{parentName:"li"},"RoiTypeInput")," - type"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[ID]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ROIFragment"),(0,r.kt)("h4",{id:"afrom_df"},"afrom","_","df"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def afrom_df(df: Optional[DataFrame], rath: MikroRath = None) -> TableFragment\n")),(0,r.kt)("p",null,"from_df"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"df")," ",(0,r.kt)("em",{parentName:"li"},"DataFrame")," - df"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  TableFragment"),(0,r.kt)("h4",{id:"from_df-1"},"from","_","df"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def from_df(df: Optional[DataFrame], rath: MikroRath = None) -> TableFragment\n")),(0,r.kt)("p",null,"from_df"),(0,r.kt)("p",null,"Creates a Representation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"df")," ",(0,r.kt)("em",{parentName:"li"},"DataFrame")," - df"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  TableFragment"),(0,r.kt)("h4",{id:"acreate_sample"},"acreate","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def acreate_sample(name: Optional[str] = None, creator: Optional[str] = None, meta: Optional[Dict] = None, experiments: Optional[List[Optional[ID]]] = None, rath: MikroRath = None) -> Optional[Create_sampleMutationCreatesample]\n")),(0,r.kt)("p",null,"create_sample"),(0,r.kt)("p",null,"createSample: Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"meta")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[Dict]",", optional")," - meta."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"experiments")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[ID]","]], optional")," - experiments."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_sampleMutation"),(0,r.kt)("h4",{id:"create_sample-1"},"create","_","sample"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_sample(name: Optional[str] = None, creator: Optional[str] = None, meta: Optional[Dict] = None, experiments: Optional[List[Optional[ID]]] = None, rath: MikroRath = None) -> Optional[Create_sampleMutationCreatesample]\n")),(0,r.kt)("p",null,"create_sample"),(0,r.kt)("p",null,"createSample: Creates a Sample"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"meta")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[Dict]",", optional")," - meta."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"experiments")," ",(0,r.kt)("em",{parentName:"li"},"Optional[List[Optional","[ID]","]], optional")," - experiments."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  Create_sampleMutation"),(0,r.kt)("h4",{id:"acreate_experiment"},"acreate","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"async def acreate_experiment(name: Optional[str], creator: Optional[str] = None, meta: Optional[Dict] = None, description: Optional[str] = None, rath: MikroRath = None) -> ExperimentFragment\n")),(0,r.kt)("p",null,"create_experiment"),(0,r.kt)("p",null,"Create an experiment (only signed in users)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"str")," - name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"meta")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[Dict]",", optional")," - meta."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"description")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - description."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ExperimentFragment"),(0,r.kt)("h4",{id:"create_experiment-1"},"create","_","experiment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_experiment(name: Optional[str], creator: Optional[str] = None, meta: Optional[Dict] = None, description: Optional[str] = None, rath: MikroRath = None) -> ExperimentFragment\n")),(0,r.kt)("p",null,"create_experiment"),(0,r.kt)("p",null,"Create an experiment (only signed in users)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," ",(0,r.kt)("em",{parentName:"li"},"str")," - name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creator")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - creator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"meta")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[Dict]",", optional")," - meta."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"description")," ",(0,r.kt)("em",{parentName:"li"},"Optional","[str]",", optional")," - description."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rath")," ",(0,r.kt)("em",{parentName:"li"},"mikro.rath.MikroRath, optional")," - The mikro rath client")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  ExperimentFragment"))}c.isMDXComponent=!0}}]);