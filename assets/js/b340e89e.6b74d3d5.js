"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[145],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),k=c(r),m=i,f=k["".concat(u,".").concat(m)]||k[m]||p[m]||o;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=k;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},1856:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),a=["components"],s={sidebar_position:5,sidebar_label:"Arkitekt"},u="Mikro \u2764\ufe0f Arkitekt",c={unversionedId:"arkitekt",id:"arkitekt",title:"Mikro \u2764\ufe0f Arkitekt",description:"What is arkitekt?",source:"@site/docs/arkitekt.md",sourceDirName:".",slug:"/arkitekt",permalink:"/mikro/docs/arkitekt",editUrl:"https://github.com/jhnnsrs/mikro/edit/master/website/docs/arkitekt.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Arkitekt"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/mikro/docs/intro"},next:{title:"Turms",permalink:"/mikro/docs/turms"}},l={},p=[{value:"What is arkitekt?",id:"what-is-arkitekt",level:3},{value:"Prerequisits",id:"prerequisits",level:3},{value:"Usage Example",id:"usage-example",level:3}],k={toc:p};function m(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mikro-\ufe0f-arkitekt"},"Mikro \u2764\ufe0f Arkitekt"),(0,o.kt)("h3",{id:"what-is-arkitekt"},"What is arkitekt?"),(0,o.kt)("p",null,"Arkitekt is a modern rpc orchestration platform. It allows you to remotely call functions in your python code\nsecurely and reliably through a variety of interfaces, foremost webbased."),(0,o.kt)("h3",{id:"prerequisits"},"Prerequisits"),(0,o.kt)("p",null,"You need a fully functioning arkitekt server and mikro server running in your lap."),(0,o.kt)("h3",{id:"usage-example"},"Usage Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'\nfrom mikro.arkitekt import MikroArkitektApp\nfrom mikro.api.schema import RepresentationFragment\n\n\napp = MikroArkitektApp()\n\n@app.arkitekt.register()\ndef process_iamge(image: RepresentationFragment) -> RepresentationFragment:\n    """Process Image\n\n    Process an Image with amazing logic.\n\n\n    """"\n    # your amazing logic\n\n    return image\n\n\nwith app:\n    app.run()\n\n\n')),(0,o.kt)("p",null,"If you now start this app you can start calling this function with autogenerated\nwidgets from your code and documentation from the webinterface and organize this function in\nworkflows (see arkitekt documentation)"))}m.isMDXComponent=!0}}]);